on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: R CMD Check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,  r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,  r: 'release'}
          - {os: ubuntu-latest,  r: 'oldrel-1'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - name: Install system dependencies for Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            imagemagick \
            libmagick++-dev \
            libcurl4-openssl-dev \
            pkg-config \
            libharfbuzz-dev \
            libfribidi-dev

      - name: Install system dependencies for macOS
        if: runner.os == 'macOS'
        run: |
          brew install imagemagick
          brew install curl
          brew install harfbuzz
          brew install fribidi

      - name: Install system dependencies for Windows
        if: runner.os == 'Windows'
        run: |
          choco install imagemagick
          choco install curl

      - name: Install R packages
        run: |
          Rscript -e "install.packages(c('devtools', 'rmarkdown', 'renv'))"
          Rscript -e "if (file.exists('renv.lock')) renv::restore()"

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      - uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true

      - name: Check directory contents on Windows
        if: runner.os == 'Windows'
        run: |
          Get-ChildItem -Recurse

      - name: Check directory contents on macOS/Linux
        if: runner.os != 'Windows'
        run: |
          ls -alh
